#!/bin/bash
# s08_split_vep.sh

# Alexey Larionov 02Apr2021

# Intended use:
# ./s08_split_vep.sh &> s08_split_vep.log

# Stop at runtime errors
set -e

# Start message
echo $0
date
echo ""

# Files and folders
base_folder="/home/share"
base_name="zhang_hg38.bwa.QC.MA-flag.MA-split.ID.std-Chr.Reheaded.ClinVar.VEP"

scripts_folder="${base_folder}/scripts/s03_annotate"
cd "${scripts_folder}"

data_folder="${base_folder}/data/s03_annotate"

source_vcf="${data_folder}/${base_name}.vcf.gz"
tmp_vcf="${data_folder}/${base_name}.split-VEP.tmp.vcf.gz"
output_vcf="${data_folder}/${base_name}.split-VEP.vcf.gz"

# Progress report
bcftools --version
echo ""
echo "source_vcf: ${source_vcf}"
echo "output_vcf: ${output_vcf}"
echo ""

# Splitting VEP field in VCF
# List of fields obtained from the log generated by the previous script
# Field types assigned manually: could be String (default), Integer or Float
# It might be that the recent versions of split-vep plugin may not need the manual
# seting of the field types for correct output (except maybe for firelds
# provided not by VEP itself, but by other plugins, like CADD?)
# Note lack of spaces in the list of fields !
echo "Splitting VEP field ..."
bcftools +split-vep "${source_vcf}" \
--output "${tmp_vcf}" \
--output-type z \
--annot-prefix vep_ \
--columns \
Allele:String,\
Consequence:String,\
IMPACT:String,\
SYMBOL:String,\
Gene:String,\
Feature_type:String,\
Feature:String,\
BIOTYPE:String,\
EXON:String,\
INTRON:String,\
HGVSc:String,\
HGVSp:String,\
cDNA_position:String,\
CDS_position:String,\
Protein_position:String,\
Amino_acids:String,\
Codons:String,\
Existing_variation:String,\
DISTANCE,\
STRAND,\
FLAGS,\
VARIANT_CLASS:String,\
SYMBOL_SOURCE:String,\
HGNC_ID,\
CANONICAL:String,\
MANE:String,\
TSL,\
APPRIS,\
CCDS:String,\
ENSP:String,\
SWISSPROT:String,\
TREMBL:String,\
UNIPARC:String,\
UNIPROT_ISOFORM:String,\
GENE_PHENO:String,\
NEAREST:String,\
SIFT:String,\
PolyPhen:String,\
DOMAINS:String,\
miRNA:String,\
HGVS_OFFSET,\
AF:Float,\
AFR_AF:Float,\
AMR_AF:Float,\
EAS_AF:Float,\
EUR_AF:Float,\
SAS_AF:Float,\
AA_AF:Float,\
EA_AF:Float,\
gnomAD_AF:Float,\
gnomAD_AFR_AF:Float,\
gnomAD_AMR_AF:Float,\
gnomAD_ASJ_AF:Float,\
gnomAD_EAS_AF:Float,\
gnomAD_FIN_AF:Float,\
gnomAD_NFE_AF:Float,\
gnomAD_OTH_AF:Float,\
gnomAD_SAS_AF:Float,\
MAX_AF:Float,\
MAX_AF_POPS:String,\
CLIN_SIG:String,\
SOMATIC:String,\
PHENO:String,\
PUBMED:String,\
MOTIF_NAME:String,\
MOTIF_POS,\
HIGH_INF_POS,\
MOTIF_SCORE_CHANGE,\
TRANSCRIPTION_FACTORS:String,\
CADD_PHRED:Float,\
CADD_RAW:Float
echo ""

# Index split tmp VCF
echo "Indexing ..."
bcftools index "${tmp_vcf}"
echo ""

# Remove CSQ column
echo "Removing unsplit CSQ column ..."
bcftools annotate "${tmp_vcf}" \
--remove INFO/CSQ \
--output "${output_vcf}" \
--output-type z \
--threads 4
echo ""

# Index output VCF
echo "Indexing ..."
bcftools index "${output_vcf}"
echo ""

# Summary of INFO fields
echo "Number of INFO fields in split rm vep vcf:"
bcftools view -h "${output_vcf}" | grep ^##INFO | wc -l
echo ""

echo "List of INFO fields in split rm vep vcf:"
bcftools view -h "${output_vcf}" | grep ^##INFO
echo ""

# Clean-up
echo "Cleaning ..."
rm "${tmp_vcf}" "${tmp_vcf}.csi"
echo ""

# Completion message
echo "Done"
date
